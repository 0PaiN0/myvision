The nice to haves:

highlight all of them differently to indicate that
they can all be potentially edited (when none are selected)
Make sure this is properly needed by doing tests
when finished adding points, return to editable

created code to return from the continuous drawing mode to default,
however this may not be required if there will not be an explicit button
for continuous drawing, thus it is all up to the UX

deselect continuous when added polygon or another shape and waiting to add another one

add is not a mode and should not light up

change cursor modes name convention
when finished creating polygon, have popup option to go back to editing

should alert the user when unsaved changes before leaving

polyfill for scrollIntoViewIfNeeded for all browsers (only chrome right now)


Decided not to use image segmentation because it works on pixel bases, where each and every boundary is drawn by an array of pixels
However, can be achieved by generating an algorithm that will draw polygons based on the boundaries found on the pixels variable's value
on line 318, file called as segment-annotator.js.

https://github.com/kyamagu/js-segment-annotator

The following repo does use fabricjs, but to only draw a line;
https://github.com/AKSHAYUBHAT/ImageSegmentation

consider using pretrained models to auto-lab`el the images

display real-time image segment when drawing a shape. In the labels section.

Really like a light green / blue and white color theme

When switching images, move the relevant image from the list into view

Highlight the current image you are on

Toolkit button functionality for getting smaller with the screen should be done when we know all of the buttons

Escape button should close the settings popup

Create bottom border for when there is y overflow

Things to check for optimal UX:
Should the switch images section be located at the top or bot of the screen:
    index.html
Should the canvas fill up the entire screen when displaying images:
    drawImagesOnCanvas.js

should be able to select labels in add/remove point modes

increase label popup height when width has overflown

When typing in the labeller popup or have selected an item, highlight the Submit button (maybe border)

Remove shape doesn't remove the label from the list

Make sure the dropdown from the label list doesn't expand too much (use absolute)
When typing in the label edit section, make sure the dropdown width changes accordingly

Bug: when you make label text too long, then go back to normal, the algorithm attempts to scroll left anyway