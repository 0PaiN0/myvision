change cursor modes name convention

should alert the user when unsaved changes before leaving

when editing label and clicking scroll, should not close the editing process, however not able to fix it
as click event on the horizontal scroll identifies the target as the label list parent (required)

Really like a light green / blue and white color theme

Toolkit button functionality for getting smaller with the screen should be done when we know all of the buttons

Escape button should close the settings popup and cancel the shape labeller modal

set shape labeller modal popup height relative to text or label option height

/* button states file
 default button active
 draw polygon button active
 draw bounding box button active
 remove polygon points button active
 add polygon points button active
*/

cancel the creation of a new polygon when clicked escape or delete
or move shapes button

when creating new polygon, clicking add points should not do anything
when creating new polygon, choosing to delete points, then clicking to create new polygon again
should resume polygon drawing

when there is vertical overflow in the label list, the label options width should be narrower

the label should not track off the screen

when want to delete shape and not selected shape, upon clicking delete, a cursor should appear to delete (colour should change whether
a shape has been selected or not)

delete button does not set to a default mode when in continuous mode

add points mode should not delete the currently being drawn polygon and should instead remain in that same mode

delete images button

highlight shapes to indicate that the user needs to click on them to start adding/removing points

check when editing label name on the bigger laptop and clicking paste (with vertical overflow present); does
it scroll to appropriate width (does not on the smaller laptop, had to check for vertical overflow in ML popup functionality)

move facadeWorkersUtils contents to a folder outside named utils

Think about partitioning some of the ML prediction work as there is a memory leak with a lot of images

arrow keys should go down the dropdown options for a label

try trashcan icon for remove image label

when the bounding box is too far right, can't scale left

polygon size reduction when zoomed in is a little bit off

delete keyboard button should remove shape

when drawing a new polygon and clicking the add button shouldn't do anything

the shape labeller modal is too thick, check if can be thin at the start and resize to bigger later on

grey out the zoom button when it is above 3.9

upon drawing a bounding box (could be via ML) and the resizing the screen to smaller does not persist its blocking edges

in the upload datasets modal tables, when there is vertical overflow, some of the text can be hidden behind the scroll and the horizontal
overflow doesn't kick in automatically

increase the size of machine learning modal

was not able to check ML generated label list overflow border chrome fix on smaller screens

test ML still works as expected

need to change the rest of ML modal views css properties

when removing images from the image list, their ids will likely mess up ML generated shapes, hence will need to try and use their names
(or move the images to the empty elements, retaining the elements' indexes)

have the initial image not reach the borders (test it out 1st to see how it looks)

should be able to select labels in add/remove point modes

Things to check on chrome browsers on other pcs:

shape labeller modal  horizontal and vertical overflow fake borders
label list dropdown horizontal and vertical overflow fake borders
machine learning generated labels horizontal and vertical overflow fake borders


Decided not to have a continue to edit polygon button on the popup as it made it look vulgar and does is not a functionality that users
would really want from the get-go as the rest of the polygon edit tools would enable them to ammend their polygons post creation

Decided not to use image segmentation because it works on pixel bases, where each and every boundary is drawn by an array of pixels
However, can be achieved by generating an algorithm that will draw polygons based on the boundaries found on the pixels variable's value
on line 318, file called as segment-annotator.js.

https://github.com/kyamagu/js-segment-annotator

The following repo does use fabricjs, but to only draw a line;
https://github.com/AKSHAYUBHAT/ImageSegmentation

The nice to haves:

select multiple images or shapes to delete (via ctrl)

can update the image list thumbnails by taking screenshot from farbicjs canvas when something changes
